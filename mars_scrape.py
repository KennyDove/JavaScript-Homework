{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from splinter import browser\n",
    "from bs4 import BeautifulSoup\n",
    "from datetime import datetime \n",
    "import os\n",
    "import time\n",
    "from urllib.parse import urlsplit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "def int_browser():\n",
    "    exc_path = {'exc_path':\"C:\\Drivers\\chromedriver\\chromedriver.exe\"}\n",
    "    brow = Browser('chrome', **exc_path, headless=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "def scrape():\n",
    "    brow= int_browser()\n",
    "    mars_data = {}\n",
    "    nasa = \"https://mars.nasa.gov/news\"\n",
    "    brow.visit(nasa)\n",
    "    html = brow.html\n",
    "    soup = bs(html,\"html.parser\")\n",
    "    titles = soup.find(\"div\", class_=\"content_title\").text\n",
    "    paragraphs = soup.find(\"div\", class_=\"article_teaser_body\").text\n",
    "    mars_facts['titles'] = titles\n",
    "    mars_facts['paragraphs'] = paragraphs\n",
    "#     Taking the image \n",
    "    featured_image_url = \"https://https://www.jpl.nasa.gov/spaceimages/?search=&category=Mars\"\n",
    "    brow.visit(featured_image_url)\n",
    "    url =  \"{0.scheme}://{0.netloc}/\".format(urlsplit(featured_image_url))\n",
    "    xpath = \"//*[@id=\\\"page\\\"]/section[3]/div/ul/li[1]/a/div/div[2]/img\"\n",
    "    \n",
    "#     Selecting featured image\n",
    "    results = brow.find_by_xpath(xpath)\n",
    "    image = results[0]\n",
    "    image.click()\n",
    "    \n",
    "#   pull image using bs\n",
    "    web_image = brow.html\n",
    "    soup2 = bs(web_image,\"html.parser\")\n",
    "    image_url = soup.find(\"img\", class_=\"fancybox-image\")[\"src\"]\n",
    "    full_url = base_url + image_url\n",
    "    mars_facts['Featured_image'] = full_url\n",
    "#     Mars Weather Scrapping\n",
    "    url_weather = 'https://twitter.com/marswxreport?lang=en'\n",
    "    brow.visit(url_weather)\n",
    "    html_weather = ()\n",
    "    mars_weather = soup.find(\"p\", class_=\"TweetTextSize TweetTextSize--normal js-tweet-text tweet-text\").text\n",
    "    mars_facts['mars_weather'] = mars_weather\n",
    "    \n",
    "# mars facts\n",
    "    url_4_facts = \"https://space-facts.com/mars/\"\n",
    "    table = pd.read_html(url_4_facts)\n",
    "    table[0]\n",
    "    mars_factsdf = table[0]\n",
    "    mars_factsdf.columns = ['Parameter', 'Value']\n",
    "    final_mars_df = mars_factsdf.set_index(['Parameter'])\n",
    "    mars_table = final_mars_df.to_html()\n",
    "    mars_table = mars_table.replace(\"/\")\n",
    "    mars_facts['mars_table'] = mars_table\n",
    "    \n",
    "#     mars hemispheres\n",
    "    hemisphere_url = \"https://astrogeology.usgs.gov/search/results?q=hemisphere+enhanced&k1=target&v1=Mars\"\n",
    "    brow.visit(hemisphere_url)\n",
    "    \n",
    "#     getting url images\n",
    "    hemisphere_base = '{0.scheme}://{0.netloc}/'.format(urlsplit(hemisphere_url))\n",
    "    hemisphere_img = []\n",
    "    \n",
    "    #     Valles Marineris hemisphere\n",
    "    results = brow.find_by_xpath(\"//*[@id='product-section']/div[2]/div[4]/a/img\").click()\n",
    "    marineris_open = brow.find_by_xpath = (\"//*[@id='wide-image-toggle']\").click()\n",
    "    marineris_img = brow.html\n",
    "    soup = bs(marineris_img, \"html.parser\")\n",
    "    marineris_url = soup.find(\"img\", class_=\"wide-image\")[src]\n",
    "    marineris_imgurl = hemisphere_base + marineris_url\n",
    "    marineris_title = soup.find(\"h2\", class_ = \"title\").text\n",
    "    back_press = brow.find_by_xpath(\"//*[@id='splashy']/div[1]/div[1]/div[3]/section/a\").click()\n",
    "    marineris = {'image title':marineris_title, \"image url\": marineris_imgurl}\n",
    "    hemisphere_img.append(marineris)\n",
    "    \n",
    "#    Cerberus hemisphere\n",
    "    hemisphere_img = []\n",
    "    results2 = brow.find_by_xpath(\"//*[@id='product-section']/div[2]/div[1]/a/img\").click()\n",
    "    open_cerb = brow.find_by_xpath(\"//*[@id='wide-image-toggle']\").click()\n",
    "    cerb_url = soup.find('img', class_= \"title\").text\n",
    "    cerb_img = brow.html\n",
    "    soup = bs(cerb_img, \"html.parser\")\n",
    "    cerb_url = soup.find(\"img\", class_ = \"title\").text\n",
    "    cerb_imgurl = hemisphere_base + cerb_url\n",
    "    cerb_title = soup.find(\"h2\", class_ = \"title\").text\n",
    "    back_press = brow.find_by_xpath(\"//*[@id='splashy']/div[1]/div[1]/div[3]/section/a\").click()\n",
    "    cerb = {\"image title\": cerb_title, \"image url\": cerb_imgurl}\n",
    "    hemisphere_img.append(Cerb)\n",
    "    \n",
    "    #   Schiaparlli hemisphere\n",
    "    results3 = brow.find_by_xpath(\"//*[@id='product-section']/div[2]/div[2]/a/img\").click()\n",
    "    open_schiaparlli = brow.find_by_xpath(\"//*[@id='wide-image-toggle']\").click()\n",
    "    schiaparlli_img = brow.html\n",
    "    soup = bs(schiaparlli_img, \"html.parser\")\n",
    "    schiaparlli_url = soup.find(\"h2\",class_=\"title\").text\n",
    "    schiaparlli_imgurl = hemisphere_base + schiaparelli_url\n",
    "    back_command = brow.find_by_xpath(\"//*[@id='splashy']/div[1]/div[1]/div[3]/section/a\").click()\n",
    "    schiaparelli_link = {\"image title\":schiaparelli_title, \"image url\": schiaparelli_imgurl}\n",
    "    hemisphere_img.append(schiaparelli_link)\n",
    "    \n",
    "#     Syrtis Major Hemisphere     \n",
    "    results4 = brow.find_by_xpath(\"//*[@id='product-section']/div[2]/div[3]/a/img\").click()\n",
    "    syrtis_open = brow.find_by_xpath(\"//*[@id='wide-image-toggle']\").click()\n",
    "    syrtis_img = brow.html\n",
    "    soup = bs(syrtis_img, \"html.parser\")\n",
    "    syrtis_url = soup.find(\"img\", class_=\"wide-image\")[\"src\"]\n",
    "    syrtis_imgurl = hemisphere_base + syrtis_url\n",
    "    syrtis_title = soup.find(\"h2\",class_=\"title\").text\n",
    "    final_back = brow.find_by_xpath(\"//*[@id='splashy']/div[1]/div[1]/div[3]/section/a\").click()\n",
    "    syrtis = {\"image title\": syrtis_title, \"image url\": syrtis_imgurl}\n",
    "    hemisphere_img.append(syrtis)\n",
    "    \n",
    "    mars_data [\"hemisphere_img\"] = hermisphere_img\n",
    "    \n",
    "    return mars_data\n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "PythonData",
   "language": "python",
   "name": "pythondata"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
